{"version":3,"sources":["service-worker.js"],"names":["self","addEventListener","waitUntil","caches","open","cacheName","then","addAssets","cache","addAll","assets","catch","log","error","addRoot","fetch","response","ok","TypeError","put","Promise","all","e","eventRequest","event","request","requestUrl","URL","url","indexOf","Request","hostname","mode","respondWith","match","fetchResponse","clone"],"mappings":";AAAAA,KAAKC,iBAAiB,UAAW,SAAS,GAClCC,EAAAA,UACJC,OAAOC,KAAKC,WAAWC,KAAK,SAAS,GAC7BC,IAAAA,EAAYC,EAAMC,OAAOC,QAAQC,MAAM,SAAS,GAC5CC,QAAAA,IAAIC,KAERC,EAAUC,MAAM,eAAeT,KAAK,SAAY,GAChD,IAACU,EAASC,GACN,MAAA,IAAIC,UAAU,uBAEfV,OAAAA,EAAMW,IAAI,IAAKH,KAGjBI,OAAAA,QAAQC,IAAI,CAACd,EAAWO,IAAUH,MAAM,SAAK,GAC1CC,QAAAA,IAAIU,UAMpBtB,KAAKC,iBAAiB,QAAS,SAAS,GAClCsB,IAAAA,EAAeC,EAAMC,QACrBC,EAAa,IAAIC,IAAIH,EAAMC,QAAQG,KACnCJ,GAAAA,EAAMC,QAAQG,IAAIC,QAAQ,oBAAsB,EAAG,CAEtC,EAAA,IAAIC,QADF,mBAGS,cAAxBJ,EAAWK,WACPN,EAAAA,QAAQO,KAAO,WAGjBC,EAAAA,YACJ9B,OAAO+B,MAAMX,GAAcjB,KAAK,SAAY,GAExCU,OAAAA,GACAD,MAAMS,EAAMC,SAASnB,KAAK,SAAiB,GAClCH,OAAAA,OAAOC,KAAKC,WAAWC,KAAK,SAAS,GAEnC6B,OADDhB,EAAAA,IAAIK,EAAMC,QAASU,EAAcC,SAChCD","file":"service-worker.map","sourceRoot":"..","sourcesContent":["self.addEventListener(\"install\", event => {\r\n  event.waitUntil(\r\n    caches.open(cacheName).then(cache => {\r\n      const addAssets = cache.addAll(assets).catch(error => {\r\n        console.log(error);\r\n      });\r\n      const addRoot = fetch(\"/index.html\").then(response => {\r\n        if (!response.ok) {\r\n          throw new TypeError(\"bad response status\");\r\n        }\r\n        return cache.put(\"/\", response);\r\n      });\r\n\r\n      return Promise.all([addAssets, addRoot]).catch(e => {\r\n        console.log(e);\r\n      });\r\n    })\r\n  );\r\n});\r\n\r\nself.addEventListener(\"fetch\", event => {\r\n  let eventRequest = event.request;\r\n  let requestUrl = new URL(event.request.url);\r\n  if (event.request.url.indexOf(\"restaurant.html\") > -1) {\r\n    const cacheURL = \"restaurant.html\";\r\n    eventRequest = new Request(cacheURL);\r\n  }\r\n  if (requestUrl.hostname !== \"localhost\") {\r\n    event.request.mode = \"no-cors\";\r\n  }\r\n\r\n  event.respondWith(\r\n    caches.match(eventRequest).then(response => {\r\n      return (\r\n        response ||\r\n        fetch(event.request).then(fetchResponse => {\r\n          return caches.open(cacheName).then(cache => {\r\n            cache.put(event.request, fetchResponse.clone());\r\n            return fetchResponse;\r\n          });\r\n        })\r\n      );\r\n    })\r\n  );\r\n});\r\n"]}